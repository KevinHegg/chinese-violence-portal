---
import PageLayout from "../layouts/PageLayout.astro";
---

<PageLayout title="Charts & Graphs Dashboard" currentPage="charts">
  <div class="max-w-6xl mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8">Charts & Graphs Dashboard</h1>
    <p class="mb-10 text-lg max-w-3xl leading-relaxed">
      Explore patterns in anti-Chinese violence, event types, and victim counts using interactive charts built from the project datasets. Use the visualizations below to discover trends, compare categories, and better understand the historical record.
    </p>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
      <!-- Chart 1: Incidents Over Time -->
      <div class="bg-white border border-amber-200 rounded-xl shadow p-6">
        <h2 class="text-2xl font-semibold mb-2">Incidents of Anti-Chinese Violence Over Time</h2>
        <p class="mb-4 text-sm text-gray-600">Annual count of anti-Chinese violence events, 1850â€“1920 (from timeline.json).</p>
        <div id="chart-timeline" style="width:100%;height:350px;"></div>
      </div>
      <!-- Chart 2: Types of Violence -->
      <div class="bg-white border border-amber-200 rounded-xl shadow p-6">
        <h2 class="text-2xl font-semibold mb-2">Types of Anti-Chinese Violence</h2>
        <p class="mb-4 text-sm text-gray-600">Breakdown of event types in the lynching records (from lynchings.json).</p>
        <div id="chart-types" style="width:100%;height:350px;"></div>
      </div>
    </div>
    <!-- Chart 3: Victim Count Distribution -->
    <div class="bg-white border border-amber-200 rounded-xl shadow p-6 mb-12">
      <h2 class="text-2xl font-semibold mb-2">Victim Count per Incident</h2>
      <p class="mb-4 text-sm text-gray-600">Histogram of the number of victims per incident (from lynchings.json).</p>
      <div id="chart-victims" style="width:100%;height:350px;"></div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/echarts@5.4.3/dist/echarts.min.js"></script>
  <script type="module">
    // Load data
    const timelineData = await fetch('/src/data/timeline.json').then(r => r.json());
    const lynchingsData = await fetch('/src/data/lynchings.json').then(r => r.json());

    // --- Chart 1: Incidents Over Time ---
    const timelineEvents = timelineData.filter(e => e.eventType && e.eventType.toLowerCase().includes('anti-chinese violence'));
    const yearCounts = {};
    timelineEvents.forEach(e => {
      const y = e.year;
      if (y) yearCounts[y] = (yearCounts[y] || 0) + 1;
    });
    const years = Object.keys(yearCounts).sort();
    const counts = years.map(y => yearCounts[y]);
    const chartTimeline = echarts.init(document.getElementById('chart-timeline'));
    chartTimeline.setOption({
      title: { text: '', left: 'center' },
      tooltip: { trigger: 'axis' },
      xAxis: { type: 'category', data: years, name: 'Year', nameLocation: 'middle', nameGap: 30 },
      yAxis: { type: 'value', name: 'Number of Incidents' },
      series: [{
        data: counts,
        type: 'line',
        smooth: true,
        lineStyle: { color: '#b91c1c', width: 3 },
        areaStyle: { color: '#fde68a' },
        symbol: 'circle',
        symbolSize: 8
      }],
      grid: { left: 50, right: 30, top: 40, bottom: 60 },
      responsive: true
    });

    // --- Chart 2: Types of Violence ---
    const typeCounts = {};
    lynchingsData.forEach(e => {
      const t = e['event-type'] || 'Unknown';
      typeCounts[t] = (typeCounts[t] || 0) + 1;
    });
    const typeNames = Object.keys(typeCounts);
    const typeVals = typeNames.map(t => typeCounts[t]);
    const chartTypes = echarts.init(document.getElementById('chart-types'));
    chartTypes.setOption({
      tooltip: { trigger: 'item' },
      xAxis: { type: 'category', data: typeNames, name: 'Category', axisLabel: { rotate: 30 } },
      yAxis: { type: 'value', name: 'Count' },
      series: [{
        data: typeVals,
        type: 'bar',
        itemStyle: { color: '#b91c1c', borderRadius: [6, 6, 0, 0] },
        barWidth: '60%'
      }],
      grid: { left: 50, right: 30, top: 40, bottom: 80 },
      responsive: true
    });

    // --- Chart 3: Victim Count Distribution ---
    const victimCounts = lynchingsData.map(e => Number(e['number-of-victims']) || 0).filter(n => n > 0);
    const maxVictims = Math.max(...victimCounts);
    const binSize = Math.ceil(maxVictims / 10);
    const bins = Array(10).fill(0);
    victimCounts.forEach(n => {
      const bin = Math.min(Math.floor((n - 1) / binSize), 9);
      bins[bin]++;
    });
    const binLabels = bins.map((_, i) => {
      const start = i * binSize + 1;
      const end = (i === 9) ? maxVictims : (i + 1) * binSize;
      return `${start}-${end}`;
    });
    const chartVictims = echarts.init(document.getElementById('chart-victims'));
    chartVictims.setOption({
      tooltip: { trigger: 'axis' },
      xAxis: { type: 'category', data: binLabels, name: 'Victims per Incident' },
      yAxis: { type: 'value', name: 'Incident Count' },
      series: [{
        data: bins,
        type: 'bar',
        itemStyle: { color: '#f59e42', borderRadius: [6, 6, 0, 0] },
        barWidth: '60%'
      }],
      grid: { left: 50, right: 30, top: 40, bottom: 60 },
      responsive: true
    });
  </script>
</PageLayout> 